@using System.Linq
@using Microsoft.Ajax.Utilities
@using SKBKontur.Infrastructure.CommonExtenssions
@using SKBKontur.Treller.WebApplication.Controllers.RoundDance
@model SKBKontur.Treller.WebApplication.Controllers.RoundDance.RoundDanceViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE HTML>
<!--[if IE]><![endif]-->
<!--[if lt IE 7]><html class="ie ie-lt7 ie-lt8 ie-lt9"><![endif]-->
<!--[if lt IE 8]><html class="ie ie-lt8 ie-lt9"><![endif]-->
<!--[if lt IE 9]><html class="ie ie-lt9"><![endif]-->
<!--[if gt IE 8]><html class="ie"><![endif]-->
<!--[if !IE]><!--><html><!--<![endif]-->
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <title>Хороводчество</title>
    <meta name="robots" content="noindex, nofollow" />
    
    <style type="text/css">
        .tablerow td, th {
            padding: 5px 10px 5px;
        }

        .tablerow th {
            padding-top: 20px;
        }

        .tablerow2 { font-weight: bold; }
        .tablerow3 {
            color: #6abf3d;
            font-weight: bold;
        }

        .tablerow4 {
            color: #ff6a00;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div>
        <h2>Текущие направления:</h2>
        <table class="tablerow">
            @foreach (var pair in Model.DirectionPeoples)
            {
                <tr>
                    <th>@pair.Key.GetEnumDescription()</th>
                    <th>Вес</th>
                    <th>Вес, куда ротироваться</th>

                    <th>Шустрые задачи</th>
                    <th>Инфраструктура</th>
                    <th>Дежурство</th>
                    <th>FeatureTeam</th>
                </tr>

                foreach (var people in pair.Value)
                {
                    <tr>

                        <td>@people.People.Name</td>
                        <td>@people.CurrentWeight.Weight</td>
                        <td></td>

                        <td>@people.DirectionWeights[Direction.SpeedyFeatures].RotationWeight</td>
                        <td>@people.DirectionWeights[Direction.Infrastructure].RotationWeight</td>
                        <td>@people.DirectionWeights[Direction.Duty].RotationWeight</td>
                        <td>@people.GetFeatureTeamRotationWeight()</td>
                    </tr>
                }
            }
        </table>

        @if (Model.DirectionPeoples.SelectMany(x => x.Value).Any(x => x.Suggest != null && !x.Suggest.IsSuggestDirection && x.Suggest.SuggestDate <= DateTime.Now.Date))
        {
            <h2>Недавно отхороводились:</h2>
            <table class="tablerow">
                <tr>
                    <th>Кто</th>
                    <th>Откуда</th>
                    <th>Куда</th>
                    <th>Когда</th>
                </tr>

                @foreach (var suggest in Model.DirectionPeoples
                    .SelectMany(x => x.Value)
                    .Where(x => x.Suggest != null && !x.Suggest.IsSuggestDirection && x.Suggest.SuggestDate <= DateTime.Now.Date)
                    .Select(x => x.Suggest)
                    .OrderBy(x => x.NewDirection))
                {
                    <tr>
                        <td>@suggest.Name</td>
                        <td>@suggest.OldDirection.IfNotNull(x => x.GetEnumDescription())</td>
                        <td>@(suggest.NewDirection.GetEnumDescription())</td>
                        <td>@suggest.SuggestDate.IfNotNull(x => x.Value.ToString("dd.MM.yyyy"))</td>
                    </tr>
                }
            </table>
        }

        <h2>Ближайшие хороводы:</h2>
        <table class="tablerow">
            <tr>
                <th>Кто</th>
                <th>Откуда</th>
                <th>Куда</th>
                <th>Когда</th>
            </tr>

            @foreach (var suggest in Model.DirectionPeoples
                .SelectMany(x => x.Value)
                .Where(x => x.NextTransfers != null && x.NextTransfers.Length > 0)
                .SelectMany(x => x.NextTransfers)
                .OrderBy(x => x.TransferDate)
                .ThenBy(x => x.NewDirection))
            {
                <tr>
                    <td>@suggest.Name</td>
                    <td>@suggest.OldDirection.GetEnumDescription()</td>
                    <td>@(suggest.NewDirection.GetEnumDescription())</td>
                    <td>@(!suggest.TransferEndDate.HasValue ? suggest.TransferDate.ToString("dd.MM.yyyy") : string.Format("{0:dd.MM.yyyy} - {1:dd.MM.yyyy}", suggest.TransferDate, suggest.TransferEndDate.Value))</td>
                </tr>
            }
        </table>
</div>
</body>
@Html.Raw("</html>")
